
WITH SLOTS AS (
SELECT
	FLOOR(M.TIME_S_TRANSLATED / 3600) AS SLOTNUM,

	
	PMW.DGA AS PCAP_DGA,
    array_position(ARRAY['no-malware', 'non-dga', 'dga']::malware_type[], M.pcap_malware_type) - 1 AS DGA,
    M.PCAP_infected,

	COUNT(DISTINCT PCAP_ID) AS PCAPS_COUNT,
	ARRAY_AGG(DISTINCT PCAP_ID) AS PCAPS,

	SUM(
		CASE
			WHEN RANK_BDN > 10000 THEN 1
			ELSE 0
		END
	) AS RANK_BDN,

	COUNT(DISTINCT CASE WHEN EPS1 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAP_POS_1,
	COUNT(DISTINCT CASE WHEN EPS2 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAP_POS_2,
	COUNT(DISTINCT CASE WHEN EPS3 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAP_POS_3,
	COUNT(DISTINCT CASE WHEN EPS4 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAP_POS_4,
	ARRAY_AGG(DISTINCT CASE WHEN EPS1 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAPID_POS1,
	ARRAY_AGG(DISTINCT CASE WHEN EPS2 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAPID_POS2,
	ARRAY_AGG(DISTINCT CASE WHEN EPS3 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAPID_POS3,
	ARRAY_AGG(DISTINCT CASE WHEN EPS4 > 0.5 THEN M.PCAP_ID ELSE NULL END) AS PCAPID_POS4,
    
	COUNT(*) AS TOTAL,
	SUM(CASE WHEN M.IS_R THEN 0 ELSE 1 END) AS Q,
	SUM(CASE WHEN M.IS_R THEN 1 ELSE 0 END) AS R,
	COUNT(DISTINCT DN_ID) AS U,
	SUM(CASE WHEN EPS1 > 0.5 THEN 1 ELSE NULL END) AS POS_1,
	SUM(CASE WHEN EPS2 > 0.5 THEN 1 ELSE NULL END) AS POS_2,
	SUM(CASE WHEN EPS3 > 0.5 THEN 1 ELSE NULL END) AS POS_3,
	SUM(CASE WHEN EPS4 > 0.5 THEN 1 ELSE NULL END) AS POS_4,

    -- add materialized view with just queries, nx, responses with first_by_(pcap/global).

	SUM(CASE WHEN RANK_DN >  10000 AND EPS1 >  0.5 THEN 1 ELSE 0 END) AS POS_1_WL,
	SUM(CASE WHEN RANK_DN >  10000 AND EPS2 >  0.5 THEN 1 ELSE 0 END) AS POS_2_WL,
	SUM(CASE WHEN RANK_DN >  10000 AND EPS3 >  0.5 THEN 1 ELSE 0 END) AS POS_3_WL,
	SUM(CASE WHEN RANK_DN >  10000 AND EPS4 >  0.5 THEN 1 ELSE 0 END) AS POS_4_WL,

	ARRAY_REMOVE(ARRAY_AGG(CASE WHEN EPS1 > 0.5 THEN DN ELSE NULL END), NULL) AS POS_1_DNAGG,
	ARRAY_REMOVE(ARRAY_AGG(CASE WHEN EPS2 > 0.5 THEN DN ELSE NULL END), NULL) AS POS_2_DNAGG,
	ARRAY_REMOVE(ARRAY_AGG(CASE WHEN EPS3 > 0.5 THEN DN ELSE NULL END), NULL) AS POS_3_DNAGG,
	ARRAY_REMOVE(ARRAY_AGG(CASE WHEN EPS4 > 0.5 THEN DN ELSE NULL END), NULL) AS POS_4_DNAGG
FROM
	nx_global AS M

    JOIN PCAP_MALWARE PMW ON M.PCAP_ID=PMW.ID

    GROUP BY SLOTNUM, PCAP_DGA, M.PCAP_MALWARE_TYPE, M.PCAP_INFECTED
) SELECT * FROM SLOTS 
