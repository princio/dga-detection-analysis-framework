#ifndef __WINDOWING__UTILS__
#define __WINDOWING__UTILS__

#include "common.h"

#include <stdint.h>

typedef struct Int32Set { 
    int32_t value;

    struct Int32Set* next; 
} Int32Set;


typedef struct HashMapItem { 
    int32_t key;

    int32_t falses;
    int32_t trues;
    
    struct HashMapItem* next;
} HashMapItem;



typedef struct HashMap { 
    int32_t size;

    HashMapItem* root;
} HashMap;


void sourcelist_insert(SourcesSet*, Source* source);
void sourceslists_toarray(SourcesSet*);


void set_insert(Int32Set* root, int32_t number);
int set_exists(Int32Set* root, int32_t number);
int set_size(Int32Set* root);


HashMapItem* hash_push(HashMap* map, int32_t key);
HashMapItem* hash_get(HashMap* root, int32_t key);
HashMapItem** hash_get_ref(HashMap* root, int32_t key);

void hash_increment(HashMap* root, int32_t key, int is_falses);

int32_t hash_infected(HashMap* root, enum Class cl);

void hash_free(HashMap*);

#endif