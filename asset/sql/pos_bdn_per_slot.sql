WITH WHITELIST AS (SELECT * FROM WHITELIST_DN WHERE WHITELIST_ID = 1),
DN_NN1 AS (SELECT * FROM DN_NN WHERE NN_ID = 1),
DN_NN2 AS (SELECT * FROM DN_NN WHERE NN_ID = 2),
DN_NN3 AS (SELECT * FROM DN_NN WHERE NN_ID = 3),
DN_NN4 AS (SELECT * FROM DN_NN WHERE NN_ID = 4),
PCAPMW AS (SELECT PCAP.ID, DGA FROM PCAP JOIN MALWARE ON PCAP.MALWARE_ID = MALWARE.ID WHERE PCAP.DATASET='CTU-13'),
SUBMESSAGES AS (
	SELECT DISTINCT ON (M.DN_ID, M.PCAP_ID) * FROM MESSAGE AS M
),
SUBMESSAGES_DN AS (
	SELECT SM.*, DN.BDN FROM SUBMESSAGES AS SM JOIN DN ON SM.DN_ID = DN.ID
),
MESSAGES AS (
  SELECT 
    __M.DN_ID,
    __M.PCAP_ID,
	__M.BDN,
    FLOOR(__M.TIME_S_TRANSLATED / (3600)) AS SLOTNUM, 
    COUNT(*) AS QR,
    SUM(CASE WHEN __M.IS_R IS FALSE THEN 1 ELSE 0 END) AS Q,
    SUM(CASE WHEN __M.IS_R IS TRUE THEN 1 ELSE 0 END) AS R,
    SUM(CASE WHEN __M.IS_R IS TRUE AND RCODE = 3 THEN 1 ELSE 0 END ) AS NX
  FROM
      SUBMESSAGES_DN __M
  GROUP BY
    __M.DN_ID,
    __M.PCAP_ID,
	__M.BDN,
    SLOTNUM
),
SLOTS AS (
SELECT
  M.PCAP_ID,
  P.Q AS QQ,
  P.U AS UU,
  P.DURATION AS D,
  PCAPMW.DGA,
  M.SLOTNUM,
  SUM(CASE WHEN WHITELIST.RANK_BDN > 1000000 THEN 1 ELSE 0 END) AS RANK_BDN,
  COUNT(DISTINCT M.DN_ID) AS U,
  COUNT(DISTINCT M.BDN) AS BDNC,
  count(DISTINCT CASE WHEN DN_NN1.VALUE <= 0.999 THEN M.BDN ELSE NULL END) AS BDN_NEG1,
  count(DISTINCT CASE WHEN DN_NN1.VALUE > 0.999 THEN M.BDN ELSE NULL END) AS BDN_POS1,
  count(DISTINCT CASE WHEN WHITELIST.RANK_BDN < 1000000 AND DN_NN1.VALUE <= 0.999 THEN M.BDN ELSE NULL END) AS BDN_WLNEG1,
  count(DISTINCT CASE WHEN WHITELIST.RANK_BDN < 1000000 AND DN_NN1.VALUE > 0.999 THEN M.BDN ELSE NULL END) AS BDN_WLPOS1,
  -- array_agg(DISTINCT CASE WHEN DN_NN1.VALUE <= 0.999 THEN DN.BDN ELSE NULL END) AS BDN_NEG1,
  -- array_agg(DISTINCT CASE WHEN DN_NN1.VALUE > 0.999 THEN DN.BDN ELSE NULL END) AS BDN_POS1,
  -- array_agg(DISTINCT DN.BDN) AS BDN,
  SUM(M.QR) AS QR,
  SUM(M.Q) AS Q,
  SUM(M.R) AS R,
  SUM(M.NX) AS NX,
  SUM(CASE WHEN DN_NN1.VALUE <= 0.999 THEN M.Q ELSE 0 END) AS NEG_NN1,
  SUM(CASE WHEN DN_NN2.VALUE <= 0.999 THEN M.Q ELSE 0 END) AS NEG_NN2,
  SUM(CASE WHEN DN_NN3.VALUE <= 0.999 THEN M.Q ELSE 0 END) AS NEG_NN3,
  SUM(CASE WHEN DN_NN4.VALUE <= 0.999 THEN M.Q ELSE 0 END) AS NEG_NN4,
  SUM(CASE WHEN DN_NN1.VALUE > 0.999 THEN M.Q ELSE 0 END) AS POS_NN1,
  SUM(CASE WHEN DN_NN2.VALUE > 0.999 THEN M.Q ELSE 0 END) AS POS_NN2,
  SUM(CASE WHEN DN_NN3.VALUE > 0.999 THEN M.Q ELSE 0 END) AS POS_NN3,
  SUM(CASE WHEN DN_NN4.VALUE > 0.999 THEN M.Q ELSE 0 END) AS POS_NN4,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN M.Q ELSE (CASE WHEN DN_NN1.VALUE <= 0.999 THEN M.Q ELSE 0 END) END) AS NEGWL_NN1,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN M.Q ELSE (CASE WHEN DN_NN2.VALUE <= 0.999 THEN M.Q ELSE 0 END) END) AS NEGWL_NN2,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN M.Q ELSE (CASE WHEN DN_NN3.VALUE <= 0.999 THEN M.Q ELSE 0 END) END) AS NEGWL_NN3,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN M.Q ELSE (CASE WHEN DN_NN4.VALUE <= 0.999 THEN M.Q ELSE 0 END) END) AS NEGWL_NN4,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN 0 ELSE (CASE WHEN DN_NN1.VALUE > 0.999 THEN M.Q ELSE 0 END) END) AS POSWL_NN1,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN 0 ELSE (CASE WHEN DN_NN2.VALUE > 0.999 THEN M.Q ELSE 0 END) END) AS POSWL_NN2,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN 0 ELSE (CASE WHEN DN_NN3.VALUE > 0.999 THEN M.Q ELSE 0 END) END) AS POSWL_NN3,
  SUM(CASE WHEN WHITELIST.RANK_BDN <= 1000000 THEN 0 ELSE (CASE WHEN DN_NN4.VALUE > 0.999 THEN M.Q ELSE 0 END) END) AS POSWL_NN4
FROM
  MESSAGES M
  JOIN PCAP P ON M.PCAP_ID = P.ID
  JOIN PCAPMW ON M.PCAP_ID = PCAPMW.ID
  LEFT JOIN WHITELIST ON M.DN_ID = WHITELIST.DN_ID
  -- JOIN DN ON M.DN_ID = DN.ID
  JOIN DN_NN1 ON M.DN_ID = DN_NN1.DN_ID
  JOIN DN_NN2 ON M.DN_ID = DN_NN2.DN_ID
  JOIN DN_NN3 ON M.DN_ID = DN_NN3.DN_ID
  JOIN DN_NN4 ON M.DN_ID = DN_NN4.DN_ID
-- WHERE PCAPMW.DGA=0
GROUP BY
  M.PCAP_ID,
  P.Q,
  P.U,
  P.DURATION,
  PCAPMW.DGA,
  M.SLOTNUM
)
SELECT SLOTNUM, DGA, SUM(BDN_POS1), SUM(BDN_WLPOS1) FROM SLOTS GROUP BY SLOTNUM, DGA ORDER BY DGA